{"ast":null,"code":"// Utility functions for API testing and data validation\n\nexport const validateProductStructure = product => {\n  const required = ['id', 'name', 'price'];\n  const recommended = ['rating', 'images', 'colors'];\n  const errors = [];\n  const warnings = [];\n\n  // Check required fields\n  required.forEach(field => {\n    if (!product.hasOwnProperty(field) || product[field] === null || product[field] === undefined) {\n      errors.push(`Missing required field: ${field}`);\n    }\n  });\n\n  // Check recommended fields\n  recommended.forEach(field => {\n    if (!product.hasOwnProperty(field)) {\n      warnings.push(`Missing recommended field: ${field}`);\n    }\n  });\n\n  // Validate specific field types\n  if (product.price && typeof product.price !== 'number') {\n    errors.push('Price should be a number');\n  }\n  if (product.rating && (typeof product.rating !== 'number' || product.rating < 0 || product.rating > 5)) {\n    warnings.push('Rating should be a number between 0 and 5');\n  }\n  if (product.images && !Array.isArray(product.images)) {\n    warnings.push('Images should be an array');\n  }\n  if (product.colors && !Array.isArray(product.colors)) {\n    warnings.push('Colors should be an array');\n  }\n  return {\n    isValid: errors.length === 0,\n    errors,\n    warnings\n  };\n};\nexport const validateProductsArray = products => {\n  if (!Array.isArray(products)) {\n    return {\n      isValid: false,\n      errors: ['Response should be an array of products'],\n      warnings: [],\n      productValidations: []\n    };\n  }\n  const productValidations = products.map((product, index) => ({\n    index,\n    product,\n    validation: validateProductStructure(product)\n  }));\n  const allErrors = productValidations.flatMap(pv => pv.validation.errors.map(error => `Product ${pv.index}: ${error}`));\n  const allWarnings = productValidations.flatMap(pv => pv.validation.warnings.map(warning => `Product ${pv.index}: ${warning}`));\n  return {\n    isValid: allErrors.length === 0,\n    errors: allErrors,\n    warnings: allWarnings,\n    productValidations,\n    summary: {\n      total: products.length,\n      valid: productValidations.filter(pv => pv.validation.isValid).length,\n      withWarnings: productValidations.filter(pv => pv.validation.warnings.length > 0).length\n    }\n  };\n};\nexport const formatApiTestResults = testResult => {\n  if (!testResult) return 'No test results available';\n  const {\n    success,\n    status,\n    data,\n    error,\n    message\n  } = testResult;\n  if (!success) {\n    return `❌ Connection Failed (${status}): ${error || message}`;\n  }\n  if (!data) {\n    return `✅ Connected (${status}) but no data received`;\n  }\n  const validation = validateProductsArray(data);\n  let result = `✅ Connected (${status}) - ${validation.summary.total} products found\\n`;\n  if (validation.summary.valid === validation.summary.total) {\n    result += `✅ All products have valid structure`;\n  } else {\n    result += `⚠️ ${validation.summary.valid}/${validation.summary.total} products have valid structure`;\n  }\n  if (validation.warnings.length > 0) {\n    result += `\\n⚠️ ${validation.warnings.length} warnings found`;\n  }\n  if (validation.errors.length > 0) {\n    result += `\\n❌ ${validation.errors.length} errors found`;\n  }\n  return result;\n};","map":{"version":3,"names":["validateProductStructure","product","required","recommended","errors","warnings","forEach","field","hasOwnProperty","undefined","push","price","rating","images","Array","isArray","colors","isValid","length","validateProductsArray","products","productValidations","map","index","validation","allErrors","flatMap","pv","error","allWarnings","warning","summary","total","valid","filter","withWarnings","formatApiTestResults","testResult","success","status","data","message","result"],"sources":["C:/Users/Tahaf/Desktop/Renart/renartuı/src/utils/apiHelpers.js"],"sourcesContent":["// Utility functions for API testing and data validation\r\n\r\nexport const validateProductStructure = (product) => {\r\n  const required = ['id', 'name', 'price'];\r\n  const recommended = ['rating', 'images', 'colors'];\r\n  \r\n  const errors = [];\r\n  const warnings = [];\r\n\r\n  // Check required fields\r\n  required.forEach(field => {\r\n    if (!product.hasOwnProperty(field) || product[field] === null || product[field] === undefined) {\r\n      errors.push(`Missing required field: ${field}`);\r\n    }\r\n  });\r\n\r\n  // Check recommended fields\r\n  recommended.forEach(field => {\r\n    if (!product.hasOwnProperty(field)) {\r\n      warnings.push(`Missing recommended field: ${field}`);\r\n    }\r\n  });\r\n\r\n  // Validate specific field types\r\n  if (product.price && typeof product.price !== 'number') {\r\n    errors.push('Price should be a number');\r\n  }\r\n\r\n  if (product.rating && (typeof product.rating !== 'number' || product.rating < 0 || product.rating > 5)) {\r\n    warnings.push('Rating should be a number between 0 and 5');\r\n  }\r\n\r\n  if (product.images && !Array.isArray(product.images)) {\r\n    warnings.push('Images should be an array');\r\n  }\r\n\r\n  if (product.colors && !Array.isArray(product.colors)) {\r\n    warnings.push('Colors should be an array');\r\n  }\r\n\r\n  return {\r\n    isValid: errors.length === 0,\r\n    errors,\r\n    warnings\r\n  };\r\n};\r\n\r\nexport const validateProductsArray = (products) => {\r\n  if (!Array.isArray(products)) {\r\n    return {\r\n      isValid: false,\r\n      errors: ['Response should be an array of products'],\r\n      warnings: [],\r\n      productValidations: []\r\n    };\r\n  }\r\n\r\n  const productValidations = products.map((product, index) => ({\r\n    index,\r\n    product,\r\n    validation: validateProductStructure(product)\r\n  }));\r\n\r\n  const allErrors = productValidations.flatMap(pv => \r\n    pv.validation.errors.map(error => `Product ${pv.index}: ${error}`)\r\n  );\r\n\r\n  const allWarnings = productValidations.flatMap(pv => \r\n    pv.validation.warnings.map(warning => `Product ${pv.index}: ${warning}`)\r\n  );\r\n\r\n  return {\r\n    isValid: allErrors.length === 0,\r\n    errors: allErrors,\r\n    warnings: allWarnings,\r\n    productValidations,\r\n    summary: {\r\n      total: products.length,\r\n      valid: productValidations.filter(pv => pv.validation.isValid).length,\r\n      withWarnings: productValidations.filter(pv => pv.validation.warnings.length > 0).length\r\n    }\r\n  };\r\n};\r\n\r\nexport const formatApiTestResults = (testResult) => {\r\n  if (!testResult) return 'No test results available';\r\n\r\n  const { success, status, data, error, message } = testResult;\r\n\r\n  if (!success) {\r\n    return `❌ Connection Failed (${status}): ${error || message}`;\r\n  }\r\n\r\n  if (!data) {\r\n    return `✅ Connected (${status}) but no data received`;\r\n  }\r\n\r\n  const validation = validateProductsArray(data);\r\n  \r\n  let result = `✅ Connected (${status}) - ${validation.summary.total} products found\\n`;\r\n  \r\n  if (validation.summary.valid === validation.summary.total) {\r\n    result += `✅ All products have valid structure`;\r\n  } else {\r\n    result += `⚠️ ${validation.summary.valid}/${validation.summary.total} products have valid structure`;\r\n  }\r\n\r\n  if (validation.warnings.length > 0) {\r\n    result += `\\n⚠️ ${validation.warnings.length} warnings found`;\r\n  }\r\n\r\n  if (validation.errors.length > 0) {\r\n    result += `\\n❌ ${validation.errors.length} errors found`;\r\n  }\r\n\r\n  return result;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}