{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3000/api',\n  timeout: 15000,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n});\n\n// Add request interceptor for debugging\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`🔄 API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`);\n  return config;\n}, error => {\n  console.error('❌ API Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Add response interceptor for debugging and error handling\napi.interceptors.response.use(response => {\n  console.log(`✅ API Response: ${response.status} ${response.config.url}`);\n  return response;\n}, error => {\n  var _error$response;\n  console.error('❌ API Response Error:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status, error.message);\n  return Promise.reject(error);\n});\nconst applyFilters = (products, filters) => {\n  return products.filter(product => {\n    if (filters.minPrice && product.price < parseFloat(filters.minPrice)) return false;\n    if (filters.maxPrice && product.price > parseFloat(filters.maxPrice)) return false;\n    if (filters.minPopularity && (product.rating || product.popularity) < parseFloat(filters.minPopularity)) return false;\n    return true;\n  });\n};\nexport const productService = {\n  getAllProducts: async () => {\n    try {\n      var _response$data;\n      const response = await api.get('/products');\n      console.log('📦 Received products from API:', ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.length) || 0, 'items');\n      return response.data || [];\n    } catch (error) {\n      console.error('❌ Failed to fetch products from API:', error.message);\n      throw new Error(`Failed to fetch products: ${error.message}`);\n    }\n  },\n  getProductsByFilters: async filters => {\n    try {\n      var _response$data2;\n      const params = new URLSearchParams();\n      if (filters.minPrice) params.append('minPrice', filters.minPrice);\n      if (filters.maxPrice) params.append('maxPrice', filters.maxPrice);\n      if (filters.minPopularity) params.append('minPopularity', filters.minPopularity);\n      const queryString = params.toString();\n      const url = queryString ? `/products?${queryString}` : '/products';\n      console.log('🔍 Fetching filtered products with params:', Object.fromEntries(params));\n      const response = await api.get(url);\n      console.log('📦 Received filtered products from API:', ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.length) || 0, 'items');\n      return response.data || [];\n    } catch (error) {\n      console.error('❌ Failed to fetch filtered products from API:', error.message);\n      throw new Error(`Failed to fetch filtered products: ${error.message}`);\n    }\n  },\n  // Test API connection\n  testConnection: async () => {\n    try {\n      const response = await api.get('/products');\n      return {\n        success: true,\n        status: response.status,\n        data: response.data,\n        message: 'API connection successful'\n      };\n    } catch (error) {\n      var _error$response2;\n      return {\n        success: false,\n        status: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) || 'Network Error',\n        error: error.message,\n        message: 'API connection failed'\n      };\n    }\n  }\n};\nexport { api };\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","status","_error$response","message","applyFilters","products","filters","filter","product","minPrice","price","parseFloat","maxPrice","minPopularity","rating","popularity","productService","getAllProducts","_response$data","get","data","length","Error","getProductsByFilters","_response$data2","params","URLSearchParams","append","queryString","toString","Object","fromEntries","testConnection","success","_error$response2"],"sources":["C:/Users/Tahaf/Desktop/Renart/renartuı/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3000/api',\r\n  timeout: 15000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json'\r\n  }\r\n});\r\n\r\n// Add request interceptor for debugging\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    console.log(`🔄 API Request: ${config.method?.toUpperCase()} ${config.url}`);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('❌ API Request Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor for debugging and error handling\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log(`✅ API Response: ${response.status} ${response.config.url}`);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('❌ API Response Error:', error.response?.status, error.message);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst applyFilters = (products, filters) => {\r\n  return products.filter(product => {\r\n    if (filters.minPrice && product.price < parseFloat(filters.minPrice)) return false;\r\n    if (filters.maxPrice && product.price > parseFloat(filters.maxPrice)) return false;\r\n    if (filters.minPopularity && (product.rating || product.popularity) < parseFloat(filters.minPopularity)) return false;\r\n    return true;\r\n  });\r\n};\r\n\r\nexport const productService = {\r\n  getAllProducts: async () => {\r\n    try {\r\n      const response = await api.get('/products');\r\n      console.log('📦 Received products from API:', response.data?.length || 0, 'items');\r\n      return response.data || [];\r\n    } catch (error) {\r\n      console.error('❌ Failed to fetch products from API:', error.message);\r\n      throw new Error(`Failed to fetch products: ${error.message}`);\r\n    }\r\n  },\r\n\r\n  getProductsByFilters: async (filters) => {\r\n    try {\r\n      const params = new URLSearchParams();\r\n      \r\n      if (filters.minPrice) params.append('minPrice', filters.minPrice);\r\n      if (filters.maxPrice) params.append('maxPrice', filters.maxPrice);\r\n      if (filters.minPopularity) params.append('minPopularity', filters.minPopularity);\r\n      \r\n      const queryString = params.toString();\r\n      const url = queryString ? `/products?${queryString}` : '/products';\r\n      \r\n      console.log('🔍 Fetching filtered products with params:', Object.fromEntries(params));\r\n      \r\n      const response = await api.get(url);\r\n      console.log('📦 Received filtered products from API:', response.data?.length || 0, 'items');\r\n      return response.data || [];\r\n    } catch (error) {\r\n      console.error('❌ Failed to fetch filtered products from API:', error.message);\r\n      throw new Error(`Failed to fetch filtered products: ${error.message}`);\r\n    }\r\n  },\r\n\r\n  // Test API connection\r\n  testConnection: async () => {\r\n    try {\r\n      const response = await api.get('/products');\r\n      return {\r\n        success: true,\r\n        status: response.status,\r\n        data: response.data,\r\n        message: 'API connection successful'\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        status: error.response?.status || 'Network Error',\r\n        error: error.message,\r\n        message: 'API connection failed'\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport { api };\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}