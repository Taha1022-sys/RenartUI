{"ast":null,"code":"import axios from 'axios';\nimport { mockProducts } from '../data/mockData';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3001/api',\n  timeout: 10000\n});\nconst applyFilters = (products, filters) => {\n  return products.filter(product => {\n    if (filters.minPrice && product.price < parseFloat(filters.minPrice)) return false;\n    if (filters.maxPrice && product.price > parseFloat(filters.maxPrice)) return false;\n    if (filters.minPopularity && product.rating < parseFloat(filters.minPopularity)) return false;\n    return true;\n  });\n};\nexport const productService = {\n  getAllProducts: async () => {\n    try {\n      const response = await api.get('/products');\n      return response.data;\n    } catch (error) {\n      console.log('API not available, using mock data');\n      return mockProducts;\n    }\n  },\n  getProductsByFilters: async filters => {\n    try {\n      const params = new URLSearchParams();\n      if (filters.minPrice) params.append('minPrice', filters.minPrice);\n      if (filters.maxPrice) params.append('maxPrice', filters.maxPrice);\n      if (filters.minPopularity) params.append('minPopularity', filters.minPopularity);\n      const response = await api.get(`/products?${params.toString()}`);\n      return response.data;\n    } catch (error) {\n      console.log('API not available, using mock data with filters');\n      return applyFilters(mockProducts, filters);\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","mockProducts","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","applyFilters","products","filters","filter","product","minPrice","price","parseFloat","maxPrice","minPopularity","rating","productService","getAllProducts","response","get","data","error","console","log","getProductsByFilters","params","URLSearchParams","append","toString"],"sources":["C:/Users/Tahaf/Desktop/Renart/renartuÄ±/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport { mockProducts } from '../data/mockData';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3001/api',\r\n  timeout: 10000,\r\n});\r\n\r\nconst applyFilters = (products, filters) => {\r\n  return products.filter(product => {\r\n    if (filters.minPrice && product.price < parseFloat(filters.minPrice)) return false;\r\n    if (filters.maxPrice && product.price > parseFloat(filters.maxPrice)) return false;\r\n    if (filters.minPopularity && product.rating < parseFloat(filters.minPopularity)) return false;\r\n    return true;\r\n  });\r\n};\r\n\r\nexport const productService = {\r\n  getAllProducts: async () => {\r\n    try {\r\n      const response = await api.get('/products');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.log('API not available, using mock data');\r\n      return mockProducts;\r\n    }\r\n  },\r\n\r\n  getProductsByFilters: async (filters) => {\r\n    try {\r\n      const params = new URLSearchParams();\r\n      \r\n      if (filters.minPrice) params.append('minPrice', filters.minPrice);\r\n      if (filters.maxPrice) params.append('maxPrice', filters.maxPrice);\r\n      if (filters.minPopularity) params.append('minPopularity', filters.minPopularity);\r\n      \r\n      const response = await api.get(`/products?${params.toString()}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.log('API not available, using mock data with filters');\r\n      return applyFilters(mockProducts, filters);\r\n    }\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,kBAAkB;AAE/C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;EACrEC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAGA,CAACC,QAAQ,EAAEC,OAAO,KAAK;EAC1C,OAAOD,QAAQ,CAACE,MAAM,CAACC,OAAO,IAAI;IAChC,IAAIF,OAAO,CAACG,QAAQ,IAAID,OAAO,CAACE,KAAK,GAAGC,UAAU,CAACL,OAAO,CAACG,QAAQ,CAAC,EAAE,OAAO,KAAK;IAClF,IAAIH,OAAO,CAACM,QAAQ,IAAIJ,OAAO,CAACE,KAAK,GAAGC,UAAU,CAACL,OAAO,CAACM,QAAQ,CAAC,EAAE,OAAO,KAAK;IAClF,IAAIN,OAAO,CAACO,aAAa,IAAIL,OAAO,CAACM,MAAM,GAAGH,UAAU,CAACL,OAAO,CAACO,aAAa,CAAC,EAAE,OAAO,KAAK;IAC7F,OAAO,IAAI;EACb,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAME,cAAc,GAAG;EAC5BC,cAAc,EAAE,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMpB,GAAG,CAACqB,GAAG,CAAC,WAAW,CAAC;MAC3C,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;MACjD,OAAO1B,YAAY;IACrB;EACF,CAAC;EAED2B,oBAAoB,EAAE,MAAOjB,OAAO,IAAK;IACvC,IAAI;MACF,MAAMkB,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;MAEpC,IAAInB,OAAO,CAACG,QAAQ,EAAEe,MAAM,CAACE,MAAM,CAAC,UAAU,EAAEpB,OAAO,CAACG,QAAQ,CAAC;MACjE,IAAIH,OAAO,CAACM,QAAQ,EAAEY,MAAM,CAACE,MAAM,CAAC,UAAU,EAAEpB,OAAO,CAACM,QAAQ,CAAC;MACjE,IAAIN,OAAO,CAACO,aAAa,EAAEW,MAAM,CAACE,MAAM,CAAC,eAAe,EAAEpB,OAAO,CAACO,aAAa,CAAC;MAEhF,MAAMI,QAAQ,GAAG,MAAMpB,GAAG,CAACqB,GAAG,CAAC,aAAaM,MAAM,CAACG,QAAQ,CAAC,CAAC,EAAE,CAAC;MAChE,OAAOV,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,iDAAiD,CAAC;MAC9D,OAAOlB,YAAY,CAACR,YAAY,EAAEU,OAAO,CAAC;IAC5C;EACF;AACF,CAAC;AAED,eAAeT,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}